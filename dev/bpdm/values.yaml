bpdm-gate:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-gate-test-company
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  ingress:
    enabled: true
    hosts:
      - host: business-partners.dev.demo.catena-x.net
        paths:
          - path: "/companies/test-company"
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/companies/test-company"
    bpdm:
      bpn:
        owner-bpn-l:
      client:
        orchestrator:
          base-url: "http://bpdm-dev-orchestrator:8080/orchestrator"
          registration:
            client-id: sa-cl7-cx-7
        pool:
          base-url: "http://bpdm-dev-pool:8080/pool"
          registration:
            client-id: sa-cl7-cx-7
      security:
        auth-server-url: https://centralidp.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl16-CX-BPDMGate
        permissions:
          readInputPartner: view_company_data
          writeInputPartner: update_company_data
          readOutputPartner: view_shared_data
          readInputChangelog: view_company_data
          readOutputChangelog: view_shared_data
          readSharingState: view_company_data
          writeSharingState: update_company_data
          read_stats: view_company_data
    springdoc:
      swagger-ui:
        oauth:
          client-id: Cl2-CX-Portal
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/dev/pool/postgresql#password>
    bpdm:
      client:
        pool:
          registration:
            client-secret: <path:bpdm/data/dev/pool/admin-user#client-secret>
        orchestrator:
          registration:
            client-secret: <path:bpdm/data/dev/pool/admin-user#client-secret>

  postgres:
    enabled: false
    fullnameOverride: ""

bpdm-pool:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-pool
  enabled: true
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners.dev.demo.catena-x.net
        paths:
          - path: /pool
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/pool/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/pool"
    bpdm:
      tasks:
        cron: "*/30 * * * * *"
      client:
        orchestrator:
          base-url: "http://bpdm-dev-orchestrator:8080/orchestrator"
          registration:
            client-id: sa-cl7-cx-7
      security:
        auth-server-url: https://centralidp.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
        permissions:
          readPartner: view_company_data
          writePartner: add_company_data
          readMemberPartner: view_company_data
          readMetaData: view_company_data
          writeMetaData: add_company_data
          readChangelog: view_company_data
          readMemberChangelog: view_company_data
    springdoc:
      swagger-ui:
        oauth:
          client-id: Cl2-CX-Portal
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/dev/pool/postgresql#password>
    bpdm:
      client:
        orchestrator:
          registration:
            client-secret: <path:bpdm/data/dev/pool/admin-user#client-secret>
  postgres:
    enabled: false
    fullnameOverride: ""

bpdm-orchestrator:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-orchestrator
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners.dev.demo.catena-x.net
        paths:
          - path: /orchestrator
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "orchestrator/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "orchestrator/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "orchestrator/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/orchestrator"
    bpdm:
      security:
        auth-server-url: https://centralidp.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
        permissions:
          createTask: add_company_data
          readTask: add_company_data
          reservation:
            clean: add_company_data
            cleanAndSync: add_company_data
            poolSync: add_company_data
          result:
            clean: add_company_data
            cleanAndSync: add_company_data
            poolSync: add_company_data

bpdm-cleaning-service-dummy:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-cleaning-service
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  applicationConfig:
    bpdm:
      client:
        orchestrator:
          base-url: "http://bpdm-dev-orchestrator:8080/orchestrator"
          provider:
            issuer-uri: https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central
          registration:
            client-id: sa-cl7-cx-7
      cleaningService:
        pollingCron: "*/30 * * * * *"
  applicationSecrets:
    bpdm:
      client:
        orchestrator:
          registration:
            client-secret:  <path:bpdm/data/dev/pool/admin-user#client-secret>

postgres:
  fullnameOverride: ""
  auth:
    postgresPassword: <path:bpdm/data/dev/pool/postgresql#postgres-password>
    password: <path:bpdm/data/dev/pool/postgresql#password>

keycloak:
  enabled: true
  postgresql:
    enabled: true
    nameOverride: "keycloak-postgres"
  auth:
    adminPassword: <path:bpdm/data/dev/pool/postgresql#password>
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hostname: "bpdm-keycloak.dev.demo.catena-x.net"
    servicePort: http