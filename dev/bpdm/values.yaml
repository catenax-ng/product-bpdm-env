bpdm-gate:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-gate-test-company
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  springProfiles:
    - auth
  ingress:
    enabled: true
    hosts:
      - host: business-partners.dev.demo.catena-x.net
        paths:
          - path: "/companies/test-company"
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/companies/test-company"
    bpdm:
      tasks:
        creation:
          fromSharingMember:
            batchSize: 100
            cron: '*/30 * * * * *'
          fromPool:
            batchSize: 100
            cron: '-'
        check:
          batchSize: 100
          cron: '*/30 * * * * *'
      client:
        orchestrator:
          base-url: "http://bpdm-dev-orchestrator:8080/"
        pool:
          base-url: "http://bpdm-dev-pool:8080/pool"
      gate-security:
        readCompanyInputData: view_company_data
        changeCompanyInputData: add_company_data
        readCompanyOutputData: view_company_data
        changeCompanyOutputData: add_company_data
      security:
        auth-server-url: https://centralidp.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
    springdoc:
      swagger-ui:
        oauth:
          client-id: Cl2-CX-Portal
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/dev/pool/postgresql#password>
    bpdm:
      security:
        credentials:
          secret: <path:bpdm/data/dev/pool/admin-user#client-secret>
  postgres:
    enabled: false

bpdm-pool:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-pool
  enabled: true
  springProfiles:
    - auth
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners.dev.demo.catena-x.net
        paths:
          - path: /pool
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/pool/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/pool"
    bpdm:
      pool-orchestrator:
        base-url: "http://bpdm-dev-orchestrator:8080/"
      client:
        pool-orchestrator:
          golden-record-scheduler-cron-expr:  "*/30 * * * * *"
      pool-security:
        readPoolPartnerData: view_company_data
        changePoolPartnerData: add_company_data
        readMetaData: view_company_data
        changeMetaData: add_company_data
        manageOpensearch: add_company_data
      security:
        auth-server-url: https://centralidp.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
    springdoc:
      swagger-ui:
        oauth:
          client-id: Cl2-CX-Portal
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/dev/pool/postgresql#password>

bpdm-bridge-dummy:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-bridge
  springProfiles:
    - auth
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners.dev.demo.catena-x.net
        paths:
          - path: /bridge
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/bridge/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/bridge/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/bridge/actuator/health/readiness"
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  applicationConfig:
    server:
      servlet:
        context-path: "/bridge"
    bpdm:
      client:
        pool:
          base-url: "http://bpdm-dev-pool:8080/pool"
        gate:
          base-url: "http://bpdm-dev-gate-test-company:8080/companies/test-company"
      bridge:
        syncAuthorities: add_company_data
      security:
        auth-server-url: https://centralidp.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
    spring:
      security:
        oauth2:
          client:
            registration:
              bridge-client:
                # Client ID used for getting token different from own Client to validate tokens
                client-id: sa-cl7-cx-7
            provider:
              catena-keycloak-provider:
                issuer-uri: https://centralidp.dev.demo.catena-x.net/auth/realms/CX-Central
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/dev/pool/postgresql#password>
    bpdm:
      security:
        credentials:
          secret: <path:bpdm/data/dev/pool/admin-user#client-secret>

bpdm-orchestrator:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-orchestrator
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  livenessProbe:
    httpGet:
      path: "/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/actuator/health/readiness"

bpdm-cleaning-service-dummy:
  image:
    tag: "main"
  fullnameOverride: bpdm-dev-cleaning-service
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  applicationConfig:
    bpdm:
      client:
        orchestrator:
          base-url: "http://bpdm-dev-orchestrator:8080/"
      cleaningService:
        pollingCron: "*/30 * * * * *"

postgres:
  auth:
    postgresPassword: <path:bpdm/data/dev/pool/postgresql#postgres-password>
    password: <path:bpdm/data/dev/pool/postgresql#password>