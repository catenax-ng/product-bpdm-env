bpdm-gate:
  fullnameOverride: bpdm-pen-gate-test-company
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  springProfiles:
    - auth
    - pool-auth
    - orchestrator-auth
  ingress:
    enabled: true
    hosts:
      - host: business-partners-pen.dev.demo.catena-x.net
        paths:
          - path: "/companies/test-company"
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners-pen.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/companies/test-company/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/companies/test-company"
    bpdm:
      bpn:
        owner-bpn-l:
      tasks:
        creation:
          fromSharingMember:
            cron: '*/30 * * * * *'
          fromPool:
            cron: '*/30 * * * * *'
        check:
          cron: '*/30 * * * * *'
      client:
        orchestrator:
          base-url: "http://bpdm-pen-orchestrator:8080/orchestrator"
        pool:
          base-url: "http://bpdm-pen-pool:8080/pool"
      security:
        auth-server-url: https://centralidp-pen.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl16-CX-BPDMGate
        permissions:
          readInput: view_company_data
          writeInput: update_company_data
          readOutput: view_shared_data
          writeOutput: update_company_data
    spring:
      security:
        oauth2:
          client:
            registration:
              pool-client:
                client-id: sa-cl7-cx-7
              orchestrator-client:
                client-id: sa-cl7-cx-7
    springdoc:
      swagger-ui:
        oauth:
          client-id: Cl2-CX-Portal
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/pen/postgresql#password>
      security:
        oauth2:
          client:
            registration:
              pool-client:
                client-secret: <path:bpdm/data/pen/admin-user#client-secret>
              orchestrator-client:
                client-secret: <path:bpdm/data/pen/admin-user#client-secret>

  postgres:
    enabled: false

bpdm-pool:
  fullnameOverride: bpdm-pen-pool
  enabled: true
  springProfiles:
    - auth
    - orchestrator-auth
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners-pen.dev.demo.catena-x.net
        paths:
          - path: /pool
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners-pen.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/pool/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/pool/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/pool"
    bpdm:
      tasks:
        cron: "*/30 * * * * *"
      client:
        orchestrator:
          base-url: "http://bpdm-pen-orchestrator:8080/orchestrator"
      security:
        auth-server-url: https://centralidp-pen.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
        permissions:
          readPartner: view_company_data
          writePartner: add_company_data
          readMetaData: view_company_data
          writeMetaData: add_company_data
    springdoc:
      swagger-ui:
        oauth:
          client-id: Cl2-CX-Portal
    spring:
      security:
        oauth2:
          client:
            provider:
            registration:
              orchestrator-client:
                client-id: sa-cl7-cx-7
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/pen/postgresql#password>
      security:
        oauth2:
          client:
            provider:
            registration:
              orchestrator-client:
                client-secret: <path:bpdm/data/pen/admin-user#client-secret>

bpdm-bridge-dummy:
  fullnameOverride: bpdm-pen-bridge
  springProfiles:
    - auth
    - gate-auth
    - pool-auth
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: business-partners-pen.dev.demo.catena-x.net
        paths:
          - path: /bridge
            pathType: Prefix
    tls:
      - secretName: tls-secret
        hosts:
          - business-partners-pen.dev.demo.catena-x.net
  livenessProbe:
    httpGet:
      path: "/bridge/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "/bridge/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "/bridge/actuator/health/readiness"
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  applicationConfig:
    server:
      servlet:
        context-path: "/bridge"
    bpdm:
      client:
        pool:
          base-url: "http://bpdm-pen-pool:8080/pool"
        gate:
          base-url: "http://bpdm-pen-gate-test-company:8080/companies/test-company"
      security:
        auth-server-url: https://centralidp-pen.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
        permissions:
          sync: add_company_data
    spring:
      security:
        oauth2:
          client:
            registration:
              pool-client:
                client-id: sa-cl7-cx-7
              gate-client:
                client-id: sa-cl7-cx-7
  applicationSecrets:
    spring:
      datasource:
        password: <path:bpdm/data/pen/postgresql#password>
      security:
        oauth2:
          client:
            registration:
              gate-client:
                client-secret: <path:bpdm/data/pen/admin-user#client-secret>
              pool-client:
                client-secret: <path:bpdm/data/pen/admin-user#client-secret>

bpdm-orchestrator:
  fullnameOverride: bpdm-pen-orchestrator
  enabled: true
  springProfiles:
    - auth
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  livenessProbe:
    httpGet:
      path: "orchestrator/actuator/health/liveness"
  readinessProbe:
    httpGet:
      path: "orchestrator/actuator/health/readiness"
  startupProbe:
    httpGet:
      path: "orchestrator/actuator/health/readiness"
  applicationConfig:
    server:
      servlet:
        context-path: "/orchestrator"
    bpdm:
      security:
        auth-server-url: https://centralidp-pen.dev.demo.catena-x.net/auth
        realm: CX-Central
        client-id: Cl7-CX-BPDM
        permissions:
          createTask: add_company_data
          viewTask: view_company_data
          processTask:
            clean: add_company_data
            cleanAndSync: add_company_data
            poolSync: add_company_data

bpdm-cleaning-service-dummy:
  fullnameOverride: bpdm-pen-cleaning-service
  springProfiles:
    - orchestrator-auth
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 800m
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 2Gi
  applicationConfig:
    bpdm:
      client:
        orchestrator:
          base-url: "http://bpdm-pen-orchestrator:8080/orchestrator"
      cleaningService:
        pollingCron: "*/30 * * * * *"
    spring:
      security:
        oauth2:
          client:
            provider:
              orchestrator-oauth2-provider:
                issuer-uri: https://centralidp-pen.dev.demo.catena-x.net/auth/realms/CX-Central
            registration:
              orchestrator-client:
                client-id: sa-cl7-cx-7
  applicationSecrets:
    spring:
      security:
        oauth2:
          client:
            registration:
              orchestrator-client:
                client-secret:  <path:bpdm/data/pen/admin-user#client-secret>

postgres:
  auth:
    postgresPassword: <path:bpdm/data/pen/postgresql#postgres-password>
    password: <path:bpdm/data/pen/postgresql#password>